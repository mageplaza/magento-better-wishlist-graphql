# Mageplaza
#
# NOTICE OF LICENSE
#
# This source file is subject to the Mageplaza.com license that is
# available through the world-wide-web at this URL:
# https://www.mageplaza.com/LICENSE.txt
#
# DISCLAIMER
#
# Do not edit or add to this file if you wish to upgrade this extension to newer
# version in the future.
#
# @category    Mageplaza
# @package     Mageplaza_BetterWishlistGraphQl
# @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)
# @license     https://www.mageplaza.com/LICENSE.txt

type Query {
    MpBetterWishlistGetConfig:MpBetterWishlistConfigOutput @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Config") @doc(description: "The query get data for Mageplaza Better Wishlist extension config.")
    MpBetterWishlistGetCategories(
        category_id: String @doc(description: "Category Id needs to be searched.")
        is_items: Boolean @doc(description: "Does add items in category?")
    ):[MpBetterWishlistCategory] @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Category\\Get") @doc(description: "The query searches for category that match the criteria specified in the filter.")
}
type Mutation {
    MpBetterWishlistCreateCategory(
        input: MpBetterWishlistCategoryInput @doc(description: "Information of the category.")
    ):MpBetterWishlistCategory @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Category\\Create") @doc(description: "Create new Mageplaza Wishlist category.")
    MpBetterWishlistEditCategory(
        input: MpBetterWishlistCategoryInput @doc(description: "Information of the category.")
    ):MpBetterWishlistCategoryEdit @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Category\\Edit") @doc(description: "Edit new Mageplaza Wishlist category.")
    MpBetterWishlistDeleteCategory(
        input: MpBetterWishlistCategoryInput @doc(description: "Information of the category.")
    ):Boolean @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Category\\Delete") @doc(description: "Delete new Mageplaza Wishlist category.")
    MpBetterWishlistAddItem(
        input: MpBetterWishlistItemInput @doc(description: "Information product and category.")
    ):MpBetterWishlistOutput @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Category\\Item\\Add") @doc(description: "Add Item in to Mageplaza Wishlist category.")
    MpBetterWishlistRemoveItem(
        input: MpBetterWishlistItemInput @doc(description: "Information product and category.")
    ):Boolean @resolver(class: "Mageplaza\\BetterWishlistGraphQl\\Model\\Resolver\\Category\\Item\\Remove") @doc(description: "Remove Item from to Mageplaza Wishlist category.")
}

input MpBetterWishlistCategoryInput {
    category_id: String @doc(description: "Category id.")
    category_name: String @doc(description: "Category name.")
}

input MpBetterWishlistItemInput {
    product_id: Int @doc(description: "Product id.")
    sku: String @doc(description: "Product SKU.")
    category_id: String @doc(description: "Category id.")
}

type MpBetterWishlistConfigOutput {
    general: MpBetterWishlistGeneralConfigOutput
}

type MpBetterWishlistGeneralConfigOutput {
    enabled: Boolean @doc(description: "Is enabled"),
    remove_after_add_to_cart: Boolean @doc(description: "Is remove item after add to cart"),
    enabled_multi_wishlist: Boolean @doc(description: "Is enabled multi wishlist"),
    show_all_item: Boolean @doc(description: "Is show all item"),
    allow_customer_create_wishlist: Boolean @doc(description: "allow customer crate wishlist"),
    limit_number_of_wishlist: Int @doc(description: "limit number of wishlist"),
    font_awesome: Boolean @doc(description: "Is enabled font awesome")
}

type MpBetterWishlistCategory {
    category_id: String @doc(description: "Category id"),
    category_name: String @doc(description: "Category name"),
    is_default: Boolean @doc(description: "Category is default category"),
    items: [MpBetterWishlistItem] @doc(description: "Category item list")
}

type MpBetterWishlistCategoryEdit {
    category_id: String @doc(description: "Category id"),
    category_name: String @doc(description: "Category name"),
    is_default: Boolean @doc(description: "Category is default category")
}

type MpBetterWishlistItem {
    wishlist_item_id: Int @doc(description: "Wishlist item id"),
    product_id: Int @doc(description: "Product id"),
    store_id: Int @doc(description: "Store id"),
    added_at: String @doc(description: "Added at"),
    description: String @doc(description: "Description"),
    qty: Int @doc(description: "Item qty")
}

type MpBetterWishlistOutput {
    entity_id: String @doc(description: "Product Entity ID")
    attribute_set_id: String @doc(description: "Product attribute set ID")
    type_id: String @doc(description: "Product type ID")
    sku: String @doc(description: "Product SKU")
    has_options: String @doc(description: "Product has options")
    required_options: String @doc(description: "Product required options")
    created_at: String @doc(description: "Product created at date time")
    updated_at: String @doc(description: "Product updatet at date time")
    name: String @doc(description: "Product name")
    image: String @doc(description: "Product image")
    small_image: String @doc(description: "Product small image")
    thumbnail: String @doc(description: "Product thumbnail")
    options_container: String @doc(description: "Product options container")
    url_key: String @doc(description: "Product url key")
    url_path: String @doc(description: "Product url path")
    status: String @doc(description: "Product status")
    visibility: String @doc(description: "Product visibility")
    tax_class_id: String @doc(description: "Product tax class ID")
    price: String @doc(description: "Product price")
    description: String @doc(description: "Product description")
}
